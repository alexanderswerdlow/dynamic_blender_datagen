# Dockerfile autogenerated on 10/23/2022, 22:17:04 by nagar
# Please do not edit this file directly

FROM nvidia/cudagl:11.4.2-base-ubuntu20.04

LABEL Author="Or Fleisher <or.fleisher@nytimes.com>"
LABEL Title="Blender in Docker"

# Environment variables
ENV DEBIAN_FRONTEND noninteractive
ENV LC_ALL C.UTF-8
ENV LANG C.UTF-8
ENV PATH "$PATH:/bin/3.3/python/bin/"
ENV BLENDER_PATH "/bin/3.3"
ENV BLENDERPIP "/bin/3.3/python/bin/pip3"
ENV BLENDERPY "/bin/3.3/python/bin/python3.10"
ENV HW="GPU"

# Install dependencies
RUN apt-get update && apt-get install -y \
	wget \ 
	libopenexr-dev \ 
	bzip2 \ 
	build-essential \ 
	zlib1g-dev \ 
	libxmu-dev \ 
	libxi-dev \ 
	libxxf86vm-dev \ 
	libfontconfig1 \ 
	libxrender1 \ 
	libgl1-mesa-glx \ 
	xz-utils \
	unzip \
	nano \
	git \
	lz4

COPY singularity/build_assets /
RUN mv build_assets/blender-3.3.1-linux-x64.tar.xz /
RUN mv build_assets/Python-3.10.5.tgz /

# Download and install Blender
# wget https://mirror.clarkson.edu/blender/release/Blender3.3/blender-3.3.1-linux-x64.tar.xz
RUN tar -xvf blender-3.3.1-linux-x64.tar.xz --strip-components=1 -C /bin \
	&& rm -rf blender-3.3.1-linux-x64.tar.xz \
	&& rm -rf blender-3.3.1-linux-x64

# Download the Python source since it is not bundled with Blender
# wget https://www.python.org/ftp/python/3.10.5/Python-3.10.5.tgz
RUN tar -xzf Python-3.10.5.tgz \
	&& cp -r Python-3.10.5/Include/* $BLENDER_PATH/python/include/python3.10/ \
	&& rm -rf Python-3.10.5.tgz \
	&& rm -rf Python-3.10.5

# Blender comes with a super outdated version of numpy (which is needed for matplotlib / opencv) so override it with a modern one
RUN rm -rf ${BLENDER_PATH}/python/lib/python3.10/site-packages/numpy

# Must first ensurepip to install Blender pip3 and then new numpy
RUN ${BLENDERPY} -m ensurepip && ${BLENDERPIP} install --upgrade pip && ${BLENDERPIP} install numpy

# ENV GLOBAL_SCRIPTS_PATH "/usr/share/blender/3.3/scripts"
ENV GLOBAL_SCRIPTS_PATH "/.config/blender/3.3/scripts"
RUN mkdir -p $GLOBAL_SCRIPTS_PATH
RUN mv /build_assets/addons $GLOBAL_SCRIPTS_PATH/

# May not be necessary
WORKDIR $GLOBAL_SCRIPTS_PATH/addons
RUN unzip rokoko-studio-live-blender-1-4-1.zip
RUN unzip Stop-motion-OBJ-v2.2.0-blender-3.6.0.zip
RUN unzip smplx_blender_addon_300_20220623.zip

WORKDIR /

RUN blender -b --python $GLOBAL_SCRIPTS_PATH/addons/install_addons.py

ENV PYTHONPATH "$PYTHONPATH:$GLOBAL_SCRIPTS_PATH/addons:$GLOBAL_SCRIPTS_PATH/addons/smplx_blender_addon:$GLOBAL_SCRIPTS_PATH/addons/rokoko-studio-live-blender-1-4-1:$GLOBAL_SCRIPTS_PATH/addons/Stop-motion-OBJ"

COPY requirements.txt /
RUN ${BLENDERPIP} install -r /requirements.txt
RUN ${BLENDERPIP} install git+https://github.com/alexanderswerdlow/image_utils.git@511d72c841dc732dd529c3627b0fab0466e622c6 --no-deps
RUN ${BLENDERPIP} install torch==2.3.0 torchvision==0.18 --index-url https://download.pytorch.org/whl/cu118

# We trick blender into thinking we have the config folder but really we later bind mount it so it's writeable
# Ideally, we would use a writeable overlay, but our cluster doesn't support this
RUN rm -rf /.config